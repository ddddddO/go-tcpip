package main

import (
	"crypto/aes"
	"fmt"
	"log"
	"tcpip"
)

func huffman() {
	//dstConnectionID := []byte{0x83, 0x94, 0xC8, 0xF0, 0x3E, 0x51, 0x57, 0x08}
	//tcpip.CreateQuicInitialSecret(dstConnectionID)

	//packet, _ := hex.DecodeString("887689aa6355e580ae20aee76196dd6d5f4a05b5340fd2820084a003700d5c6dd53168df5f87497ca589d34d1f5c033631356c96df697e94136a651d4a080212816ee019b8d894c5a37f00832a47378bfe5c0ca0085b796138eff3008919085ad2b583aa62a3848fd24a8f")
	//header := tcpip.DecodeHttp2Header(packet)
	//fmt.Printf("%+v\n", header)

	//b, _ := hex.DecodeString("00832a47378bfe5c0ca0085b796138eff3008919085ad2b583aa62a3848fd24a8f")
	//b, _ := hex.DecodeString("008919085ad2b583aa62a3848fd24a8f")
	//tcpip.DecodeHttp2Header(b)
	//decode := tcpip.HuffmanDecode(b)
	//encode := tcpip.HuffmanEncode("\"61f01158-267\"")
	//fmt.Printf("%s\n", decode)
	//fmt.Printf("%x\n", encode)
}

func main() {
	initPacket := tcpip.StrtoByte("c000000001088394c8f03e5157080000449e7b9aec34d1b1c98dd7689fb8ec11d242b123dc9bd8bab936b47d92ec356c0bab7df5976d27cd449f63300099f3991c260ec4c60d17b31f8429157bb35a1282a643a8d2262cad67500cadb8e7378c8eb7539ec4d4905fed1bee1fc8aafba17c750e2c7ace01e6005f80fcb7df621230c83711b39343fa028cea7f7fb5ff89eac2308249a02252155e2347b63d58c5457afd84d05dfffdb20392844ae812154682e9cf012f9021a6f0be17ddd0c2084dce25ff9b06cde535d0f920a2db1bf362c23e596d11a4f5a6cf3948838a3aec4e15daf8500a6ef69ec4e3feb6b1d98e610ac8b7ec3faf6ad760b7bad1db4ba3485e8a94dc250ae3fdb41ed15fb6a8e5eba0fc3dd60bc8e30c5c4287e53805db059ae0648db2f64264ed5e39be2e20d82df566da8dd5998ccabdae053060ae6c7b4378e846d29f37ed7b4ea9ec5d82e7961b7f25a9323851f681d582363aa5f89937f5a67258bf63ad6f1a0b1d96dbd4faddfcefc5266ba6611722395c906556be52afe3f565636ad1b17d508b73d8743eeb524be22b3dcbc2c7468d54119c7468449a13d8e3b95811a198f3491de3e7fe942b330407abf82a4ed7c1b311663ac69890f4157015853d91e923037c227a33cdd5ec281ca3f79c44546b9d90ca00f064c99e3dd97911d39fe9c5d0b23a229a234cb36186c4819e8b9c5927726632291d6a418211cc2962e20fe47feb3edf330f2c603a9d48c0fcb5699dbfe5896425c5bac4aee82e57a85aaf4e2513e4f05796b07ba2ee47d80506f8d2c25e50fd14de71e6c418559302f939b0e1abd576f279c4b2e0feb85c1f28ff18f58891ffef132eef2fa09346aee33c28eb130ff28f5b766953334113211996d20011a198e3fc433f9f2541010ae17c1bf202580f6047472fb36857fe843b19f5984009ddc324044e847a4f4a0ab34f719595de37252d6235365e9b84392b061085349d73203a4a13e96f5432ec0fd4a1ee65accdd5e3904df54c1da510b0ff20dcc0c77fcb2c0e0eb605cb0504db87632cf3d8b4dae6e705769d1de354270123cb11450efc60ac47683d7b8d0f811365565fd98c4c8eb936bcab8d069fc33bd801b03adea2e1fbc5aa463d08ca19896d2bf59a071b851e6c239052172f296bfb5e72404790a2181014f3b94a4e97d117b438130368cc39dbb2d198065ae3986547926cd2162f40a29f0c3c8745c0f50fba3852e566d44575c29d39a03f0cda721984b6f440591f355e12d439ff150aab7613499dbd49adabc8676eef023b15b65bfc5ca06948109f23f350db82123535eb8a7433bdabcb909271a6ecbcb58b936a88cd4e8f2e6ff5800175f113253d8fa9ca8885c2f552e657dc603f252e1a8e308f76f0be79e2fb8f5d5fbbe2e30ecadd220723c8c0aea8078cdfcb3868263ff8f0940054da48781893a7e49ad5aff4af300cd804a6b6279ab3ff3afb64491c85194aab760d58a606654f9f4400e8b38591356fbf6425aca26dc85244259ff2b19c41b9f96f3ca9ec1dde434da7d2d392b905ddf3d1f9af93d1af5950bd493f5aa731b4056df31bd267b6b90a079831aaf579be0a39013137aac6d404f518cfd46840647e78bfe706ca4cf5e9c5453e9f7cfd2b8b4c8d169a44e55c88d4a9a7f9474241e221af44860018ab0856972e194cd934")
	//initPacket, _ := hex.DecodeString("c5000000010c7f45125db20fab39495333ca000044ce69b9ce906282754a91d7f16f3df14e085f5d9e4d50cd52874d4579bfe111b46500a245923f9a403c409bfd097338edb5902463d734f8454ac4520fa029c3078b4961343d31d988fd1f3bcea895a66f06bbcfabedf43abc080c5435c2c49792663f5272b31516258ce6fc1acd4899452b59ed528759371206a7b475788c0f451ca40049e03913816bde29ca1b6f5f565f404e07d06e6a55f363604e5e9c4f08b65ae4ae61aa9d776d2ff91e2031ec6012a90a3994d008d160fcdbeca2d10677ebbf372ff9e5601146b50c0a3d467c3b90a513a8916ace72d66faca85061de95e421d34dc214335d055bdc18bec56b3c6501f350da0a1f071449f940e68edc538320fdff0e140d01073ea22ac2f37f514049dd961f12ec7a7a18226eb063c45fcd9c6240d2c036f62f3a0ab9be59bc83f9325bae314c910ce41d46f048ea8ed71e7f136c3f9cbc16bbf82b0c83df3cd331025e879fdb4bf45c53c89ba48c8a67c052ca32a9f2d23f188ac58ad488f5da4d3373fbff97d731a9735667c0c82c0a365d72545a3cf2f46eb60c12f8e8b3218c38865d4fabce2614b1bb2b918913034c8bcf79670aa6f315e6799eacaa457fa934a402dafab7d59dceaea0125ba5d7b8b24b6e913512b160ef22a89892574682ff679c10da6d203aadd352000716079402b7c6331778871ec56deb6d3eda1023ec358bbe211dee796653230c3fbc8d2477fc94360649af5cb00c1674876c2e9e66f9935d722d4d759413c54da0a7046b651dace9c579512caedd26f13129982228571873a16ce2d7a1457562219bc170d202ed8f7047681be7b5a7d544414d9934286f5ff228c057dc685089c7f31ae768c69f625e6b3828976105d53dd07e0f5d7f537bdb4a58ffca39d303b36f7a8ef8ca7e0f68a632cef6d93886e0f9c213e926b948361b1bb0aa3a04c1e012990da08dec35219864192a705c15f6d27aa88faa0b6be6921f4be6e8ab9a3dc1d72288c210ba74c69336618d52a8581e9c4acd9c86871fa8836434f786b06dff4624e508d6cbd35f638d65a54910a284ec7f2ee27f786d20a439c34c7f6b7fcc5d4cd9d7f162a6ca021a2dfde25f37a2e33a3b785b46a41e7324bd5aa180ef0b97541bd74b1297544dbc64c2f7251aa4a75709536d22bb300281708c1ffb30eb40ee9204be8ef5fe396d9e21fec4c6aab00216cd5ef83e2ccf0aefba5a02a958d94768799cdfc45eb4d4c0e9fa02afb43092f9325100640d7d98bcfa11ba7547f4b94fcbe9c350df274549e469900c11069a0fd83fdc3d5b03ca82657d0e3364461217023250fb3d379b2128ce485e8108c1c0cec66f534e3fc714771060af27f8b0909ac31c3ea658a25b438a8fb66f70769f22c1948a2bc5f306dc1a32c8e784b3496f720c4b9d14ef90ca46a82e8975a2c0654cc71442b0f86c66608eb4ecf8a1b191b9264e75a236be2b29ebae6513fa522a9a8f02d5a8f2281fe4fa343efd00b589c388b3bab6762b53201b0d6cc55aa13d812117839236df7ee7c8775c8e3f44db32a547d3427f1c4f13fa43640a46bbc0f121fe86cbc5f9a1fc69240cdc0b0f1dfa6d404804cfac849255a78454db3f5d9b723ffb46c5270f9b0ec7b61a5813c69a43ee29ea905eb0eabf3185bc14bfc95282acbc0a4e0999f454d36e366c14ca9665316c471ff4b6fcb884ed66f95150b1ff09cc1818d77ebeda98388cfd1b96c7bc250811803b2b2952d00d")
	tcpip.ParseQUIC(initPacket)

	fmt.Printf("sample is %x\n", initPacket[22:22+16])

	dstConnID := []byte{0x83, 0x94, 0xC8, 0xF0, 0x3E, 0x51, 0x57, 0x08}
	tcpip.CreateQuicInitialSecret(dstConnID)

	hpkey := tcpip.StrtoByte("9f50449e04a0e810283a1e9933adedd2")
	block, err := aes.NewCipher(hpkey)
	if err != nil {
		log.Fatal(err)
	}
	sample := initPacket[22 : 22+16]
	encsample := make([]byte, len(sample))
	block.Encrypt(encsample, sample)

	initPacket[0] ^= encsample[0] & 0x0f
	pnlength := (initPacket[0] & 0x03) + 1
	//initPacket[18 : 18+pnlength] ^= encsample[1 : 1+pnlength]
	fmt.Printf("encsample is %x\n", encsample[0:5])
	fmt.Printf("a is %x, b is %x\n", initPacket[18:18+pnlength], encsample[1:1+pnlength])

	a := tcpip.StrtoByte("7b9aec34")
	b := tcpip.StrtoByte("7b9aec36")

	for i, _ := range a {
		a[i] ^= b[i]
	}
	for i, _ := range a {
		initPacket[18+i] = a[i]
	}
	//fmt.Printf("%x\n", initPacket)
	tcpip.ParseQUIC(initPacket)
}
